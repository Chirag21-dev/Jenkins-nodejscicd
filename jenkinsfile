pipeline {
	agent any
	tools {
		nodejs 'NodeJS'
	}
	
	environment {
		DOCKER_HUB_REPO = 'chiragks1/jenkins_nodejs'
		DOCKER_HUB_CREDENTIALS_ID = 'Docker_hub_cred'
		SONAR_PROJECT_KEY = 'Jenkins-nodejscicd'
		SONAR_SCANNER_HOME = tool 'sonarqube-scanner'
	}
	stages {
		stage('Checkout Github'){
			steps {
			checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Chirag21-dev/Jenkins-nodejscicd.git']])
			}
		}
		stage('Unit Test'){
			steps {
				sh 'npm test'
				sh 'npm install'		
			}
		}
		stage('Perform SonarQube Analysis'){
			steps {
				withCredentials([string(credentialsId: 'complete_cicdsonartoken', variable: 'sonarqube')])  {
    					
					withSonarQubeEnv('sonarqube-scanner') {
    						sh """
						${SONAR_SCANNER_HOME}/bin/sonar-scanner \
						-Dsonar.projectKey=${SONAR_PROJECT_KEY} \
						-Dsonar.sources=. \
						-Dsonar.host.url=http://sonarqube:9000 \
						-Dsonar.login=${sonarqube}
						"""
					}
				}
			}
	}


	stage('Docker Image'){
			steps {
				script {
					dockerimage= docker.build("${DOCKER_HUB_REPO}:latest")
				}
			}
		}
		stage('Trivy Scan'){
			steps {
				sh 'trivy --severity HIGH,CRITICAL --no-progress --format table -o trivy-report.html image ${DOCKER_HUB_REPO}:latest'
			}
		}
    stage('Push Image to dockerhub'){
			steps {
				script {
				docker.withRegistry("https://registry.hub.docker.com","${DOCKER_HUB_CREDENTIALS_ID}"){
					dockerimage.push()
				}
				}
			}
		}


}
}
